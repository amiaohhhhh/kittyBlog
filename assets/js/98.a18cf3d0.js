(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{423:function(s,n,a){"use strict";a.r(n);var t=a(4),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"乐扣算法记录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#乐扣算法记录"}},[s._v("#")]),s._v(" 乐扣算法记录")]),s._v(" "),n("p",[n("a",{attrs:{name:"W5hEF"}})]),s._v(" "),n("h3",{attrs:{id:"数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[s._v("#")]),s._v(" [数组]")]),s._v(" "),n("p",[n("a",{attrs:{name:"L5Qmf"}})]),s._v(" "),n("h4",{attrs:{id:"唐伯虎点秋香"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#唐伯虎点秋香"}},[s._v("#")]),s._v(" 唐伯虎点秋香")]),s._v(" "),n("p",[s._v("给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。"),n("br"),s._v("eg.[1,3,5,7,7] target=>4 输出 [1,3]")]),s._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[s._v("var twoSum = function(nums, target) {\n    map=new Map();      //创建map实例\n    for(let i=0;i<nums.length;i++){  //循环遍历数组\n        x=target-nums[i]        //逆向揭发用target减去当前数组值\n        if(map.has(x)){         //利用判断当前map中有没有存在x的值,\n            return [map.get(x),i] //返回 [存在x的map的键，i]\n        }\n        map.set(nums[i],i)  //map中没有 为map新增加{当前数组值，i}\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("a",{attrs:{name:"F3DTA"}})]),s._v(" "),n("h3",{attrs:{id:"逆指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逆指针"}},[s._v("#")]),s._v(" 逆指针")]),s._v(" "),n("p",[s._v("给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。"),n("br"),s._v("请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。")]),s._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[s._v("空间复杂度+时间复杂度 最佳 在原数组中修改不需要申请新变量\nvar merge = function(nums1, m, nums2, n) {\n    let p1 = m - 1, p2 = n - 1;\n    let tail = m + n - 1;\n    var cur;\n    while (p1 >= 0 || p2 >= 0) {\n        if (p1 === -1) {\n            cur = nums2[p2--];\n        } else if (p2 === -1) {\n            cur = nums1[p1--];\n        } else if (nums1[p1] > nums2[p2]) {\n            cur = nums1[p1--];\n        } else {\n            cur = nums2[p2--];\n        }\n        console.log(cur)\n        nums1[tail--] = cur;//关键 赋值进去\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[s._v("var merge = function(nums1, m, nums2, n) {\n    nums1.splice(m, nums1.length - m, ...nums2);\n    nums1.sort((a, b) => a - b); //由小到大排序\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);